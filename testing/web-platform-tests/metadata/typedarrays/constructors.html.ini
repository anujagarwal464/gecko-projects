[The argument true (16) should be interpreted as 1 for interface Uint8ClampedArray.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Float32Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Uint32Array.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Float32Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Uint16Array.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Int16Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Uint8Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Uint8ClampedArray.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Int16Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Int8Array.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Uint16Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Int16Array.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Float64Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Int16Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Uint8Array.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Int32Array.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Float64Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Uint8ClampedArray.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Int8Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Int32Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Uint32Array.]
status=FAIL

[Constructing interface Int32Array with no arguments should throw.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Uint16Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Int32Array.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Int32Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Int8Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Uint8Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[Constructing interface ArrayBuffer with no arguments should throw.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Uint32Array.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[Constructing interface Float64Array with no arguments should throw.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Uint32Array.]
status=FAIL

[Constructing interface Uint8ClampedArray with no arguments should throw.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[Constructing interface Uint8Array with no arguments should throw.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Float32Array.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Uint8ClampedArray.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Uint16Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Float64Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Int8Array.]
status=FAIL

[Constructing interface Int16Array with no arguments should throw.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Uint8ClampedArray.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Int32Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Uint32Array.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Uint16Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Uint8ClampedArray.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Uint8Array.]
status=FAIL

[The argument 2.9 (8) should be interpreted as 2 for interface Float64Array.]
status=FAIL

[Constructing interface Uint32Array with no arguments should throw.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[Constructing interface Uint16Array with no arguments should throw.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Uint32Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Int32Array.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Uint8Array.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Float64Array.]
status=FAIL

[Constructing interface Float32Array with no arguments should throw.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument true (16) should be interpreted as 1 for interface Int16Array.]
status=FAIL

[The argument false (15) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Uint8Array.]
status=FAIL

[The argument "1" (11) should be interpreted as 1 for interface Uint16Array.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Int8Array.]
status=FAIL

[The argument 1.1 (7) should be interpreted as 1 for interface Float32Array.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument null (14) should be interpreted as 0 for interface Int8Array.]
status=FAIL

[The argument Infinity (1) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[Constructing interface Int8Array with no arguments should throw.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Float64Array.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Float32Array.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Float32Array.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Uint16Array.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Float32Array.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Int16Array.]
status=FAIL

[The argument -4043309056 (10) should be interpreted as 251658240 for interface Int8Array.]
status=FAIL

[The argument -Infinity (2) should be interpreted as 0 for interface Int32Array.]
status=FAIL

[The argument -0.9 (6) should be interpreted as 0 for interface Uint8ClampedArray.]
status=FAIL

[The argument undefined (13) should be interpreted as 0 for interface Int16Array.]
status=FAIL

[The argument "1e2" (12) should be interpreted as 100 for interface Uint32Array.]
status=FAIL

[The argument NaN (0) should be interpreted as 0 for interface Float64Array.]
status=FAIL

[The argument -0.4 (5) should be interpreted as 0 for interface Uint8Array.]
status=FAIL

[The argument object "[object Object]" (18) should be interpreted as 0 for interface Int32Array.]
status=FAIL

