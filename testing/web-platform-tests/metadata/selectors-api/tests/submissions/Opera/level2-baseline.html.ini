[In-document [Context Element].find: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): [class*=\'ple banana ora\']]
status=FAIL

[In-document.find: ::after pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::after]
status=FAIL

[In-document [Root Node].findAll: :nth-last-child selector, matching the third last child element (with refNode Element): :nth-last-child(3)]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with refNode Element): a[rel~="book mark"]]
status=FAIL

[Document.findAll: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): input[type=hidden],#attr-value input[type=radio]]
status=FAIL

[In-document [Context Element].find: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=" apple"]]
status=FAIL

[In-document [Root Node].find: Attribute value selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-value="\\e9"]]
status=FAIL

[Fragment.findAll: Invalid ID: #]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type="hidden"],#attr-value input[type=\'radio\']]
status=FAIL

[In-document [Context Element].find: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): a[href$=".org"]]
status=FAIL

[In-document.findAll: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2]
status=FAIL

[In-document Element.find: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[In-document [Context Element].findAll: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): li:nth-last-child(2n+4)]
status=FAIL

[Detached Element.findAll: Invalid combinator: div ++ address, p]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with refNode Element): [class*= banana ]]
status=FAIL

[In-document.findAll: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled]
status=FAIL

[Detached Element.findAll: Invalid pseudo-element: :::before]
status=FAIL

[Document: new NodeList]
status=FAIL

[Detached Element.find: Unknown pseudo-element: ::example]
status=FAIL

[In-document [Context Element].find: Universal selector, matching all grandchildren of the specified reference element (with no refNodes): >*>*]
status=FAIL

[Fragment.find undefined]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*="orange "]]
status=FAIL

[In-document Element.findAll: Invalid namespace: ^|div]
status=FAIL

[In-document [Context Element].findAll: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes):  :link, #pseudo-link :visited]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, matching attribute with non-ASCII characters (with refNode Element): ul[data-\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document Element.findAll: Invalid group of selectors: div,]
status=FAIL

[Document.findAll: Empty String: ]
status=FAIL

[Fragment.find: Undeclared namespace: ns|div]
status=FAIL

[Detached Element.findAll: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[In-document.find: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, not matching default option without selected attribute (with refNode Element): #attr-presence-select1 option[selected]]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]]
status=FAIL

[In-document [Context Element].findAll: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|="en"]]
status=FAIL

[In-document [Context Element].find: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): [class*= banana ]]
status=FAIL

[Detached Element.find: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[In-document.find: Child combinator, not matching element with class that is not a child of an element with class (with no refNodes): .child-div1>.child-div3]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with refNode Element): [class*="ple banana ora"]]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, matching title attribute, case insensitivity (with refNode Element): [TiTlE]]
status=FAIL

[Document.findAll: Invalid ID: #]
status=FAIL

[Fragment.find: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[Fragment.findAll: Unknown pseudo-class: div:example]
status=FAIL

[In-document Element.findAll tree order]
status=FAIL

[Detached Element.findAll: Invalid class: ..test]
status=FAIL

[Document.find: Invalid namespace: ^|div]
status=FAIL

[Fragment.find: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector, not matching class attribute with empty value (with refNode Element): [class~=""]]
status=FAIL

[In-document [Context Element].find: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): [class*=orange ]]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with no refNodes): a[rel~="book mark"]]
status=FAIL

[In-document [Context Element].find: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): a[href^="http://www"]]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=\'bookmark\'],  #attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[In-document [Context Element].find: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|="en"]]
status=FAIL

[In-document Element.find: Invalid class: ..test]
status=FAIL

[In-document.find: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, matching multiple options with selected attributes (with refNode Element): #attr-presence-select3 option[selected]]
status=FAIL

[In-document [Context Element].findAll: :first-of-type selector, matching the first td element in each table row (with no refNodes): tr :first-of-type]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, matching title attribute, case insensitivity (with refNode Element): [TiTlE]]
status=FAIL

[In-document.findAll: General sibling combinator, not matching element with id that is not a sibling after a p element (with no refNodes): #sibling>p~div]
status=FAIL

[In-document [Root Node].find: Attribute ends with selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang$="-CH"]]
status=FAIL

[In-document.find: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4]
status=FAIL

[Document.findAll: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[In-document.findAll: General sibling combinator, not matching element with id that is not a sibling after an element with id (with no refNodes): #sibling-div2~#sibling-div3, #sibling-div2~#sibling-div1]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-whitespace_foo~="\\e9"]]
status=FAIL

[Document.findAll: Invalid class: .bar.]
status=FAIL

[In-document [Root Node].findAll: Attribute begins with selector, not matching class attribute not beginning with specified substring (with refNode Element): [class^=apple]]
status=FAIL

[In-document.find: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3]
status=FAIL

[In-document [Root Node].findAll: :pseudo-only-child pseudo-class selector, matching all only-child elements (with refNode Element): :only-child]
status=FAIL

[In-document [Root Node].findAll: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with refNode Element): #attr-hyphen-div1[lang|="en"]]
status=FAIL

[In-document [Root Node].find: :nth-child selector, matching every third child element (with refNode Element): li:nth-child(3n)]
status=FAIL

[In-document.findAll: Namespace selector, matching element with any namespace (with no refNodes): #any-namespace *|div]
status=FAIL

[In-document [Context Element].findAll: :first-of-type selector, matching the first of every type of element (with no refNodes): :first-of-type]
status=FAIL

[In-document [Context Element].findAll: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with no refNodes): [class^= apple]]
status=FAIL

[In-document.find: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2]
status=FAIL

[Document.findAll tree order]
status=FAIL

[In-document.find: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)]
status=FAIL

[In-document.find: Child combinator, not matching element with id that is not a child of an element with id (with no refNodes): #child>#child-div3]
status=FAIL

[Detached Element.find: Invalid combinator: div & address, p]
status=FAIL

[In-document [Root Node].find: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=\' apple\']]
status=FAIL

[Fragment.findAll: Invalid class: .5cm]
status=FAIL

[In-document [Context Element].findAll: :root pseudo-class selector, not matching document root element (with no refNodes): :root]
status=FAIL

[In-document [Root Node].find: Attribute hyphen-separated list selector, not matching incorrect value (with refNode Element): #attr-hyphen-div4[lang|="es-AR"]]
status=FAIL

[In-document.find: General sibling combinator, not matching element with id that is not a sibling after a p element (with no refNodes): #sibling>p~div]
status=FAIL

[In-document [Context Element].find: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with no refNodes): [class^= apple]]
status=FAIL

[In-document [Context Element].find: :nth-last-of-type selector, matching the thrid last em element (with no refNodes): em:nth-last-of-type(3)]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with refNode Element): [class*= banana ]]
status=FAIL

[In-document.find: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*="orange "]]
status=FAIL

[In-document [Root Node].findAll: :first-of-type selector, matching the first of every type of element (with refNode Element): :first-of-type]
status=FAIL

[In-document [Root Node].findAll: :nth-child selector, matching every fourth child element, starting from the third (with refNode Element): :nth-child(4n-1)]
status=FAIL

[In-document [Root Node].findAll: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with refNode Element):  :only-of-type]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, matching align attribute with empty value (with refNode Element): .attr-presence-div2[align]]
status=FAIL

[In-document.find: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=\' apple\']]
status=FAIL

[In-document.find: ID selector, matching id value using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[In-document Element.find: Invalid ID: #]
status=FAIL

[In-document [Context Element].findAll: Attribute begins with selector, not matching class attribute not beginning with specified substring (with no refNodes): [class^=apple]]
status=FAIL

[In-document [Root Node].findAll: :nth-child selector, matching every second child element, starting from the fourth (with refNode Element): li:nth-child(2n+4)]
status=FAIL

[In-document [Root Node].find: :empty pseudo-class selector, matching empty p elements (with refNode Element): p:empty]
status=FAIL

[Detached Element.find: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang*="-CH"]]
status=FAIL

[In-document Element.findAll: Invalid character: >]
status=FAIL

[In-document.find: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2]
status=FAIL

[In-document.findAll: ID selector, matching element with specified id (with no refNodes): #id #id-div1]
status=FAIL

[In-document.find: :first-letter pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-letter]
status=FAIL

[In-document [Root Node].find: Attribute hyphen-separated list selector, matching lang attribute with exact value (with refNode Element): #attr-hyphen-div2[lang|="fr"]]
status=FAIL

[In-document.findAll: :enabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled]
status=FAIL

[In-document.find: :enabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled]
status=FAIL

[In-document [Root Node].find: :nth-last-of-type selector, matching the thrid last em element (with refNode Element): em:nth-last-of-type(3)]
status=FAIL

[In-document [Root Node].findAll: :nth-of-type selector, matching the third em element (with refNode Element): em:nth-of-type(3)]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with refNode Element): [class*=orange ]]
status=FAIL

[In-document.findAll: ::first-letter pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-letter]
status=FAIL

[Document supports findAll]
status=FAIL

[In-document Element.findAll: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document [Context Element].find: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value="\\e9"]]
status=FAIL

[In-document [Root Node].findAll: :pseudo-only-child pseudo-class selector, matching only-child em elements (with refNode Element): em:only-child]
status=FAIL

[In-document Element.findAll: Invalid combinator: div >> address, p]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, matching option with selected attribute (with refNode Element): #attr-presence-select2 option[selected]]
status=FAIL

[In-document [Root Node].find: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with refNode Element): span:nth-last-of-type(2n-1)]
status=FAIL

[Document.find undefined]
status=FAIL

[In-document.find: :target pseudo-class selector, matching the element referenced by the URL fragment identifier (with no refNodes): :target]
status=FAIL

[Document.findAll: Invalid class: .foo..quux]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~="bookmark"],#attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[Fragment.findAll: Invalid combinator: div & address, p]
status=FAIL

[In-document.find: :first-line pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-line]
status=FAIL

[In-document [Root Node].findAll: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with refNode Element):  :link, #pseudo-link :visited]
status=FAIL

[In-document [Context Element].findAll: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$=\'apple \']]
status=FAIL

[In-document Element.mozMatchesSelector: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi.\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[Fragment.find: Invalid pseudo-element: :::before]
status=FAIL

[In-document.find: ID selector, matching element with id with escaped character (with no refNodes): #\\#foo\\:bar]
status=FAIL

[Document.find: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[In-document.find: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div]
status=FAIL

[Detached Element.find: Invalid class: ..test]
status=FAIL

[Fragment.find: Invalid class: .5cm]
status=FAIL

[In-document.find: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong]
status=FAIL

[In-document.find: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3]
status=FAIL

[In-document.findAll: ID selector, matching id value using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, not matching element with id that is not an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-p2, #adjacent-div2+#adjacent-div1]
status=FAIL

[Document.find null]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, not matching default option without selected attribute (with refNode Element): #attr-presence-select1 option[selected]]
status=FAIL

[Document.find: Unknown pseudo-element: ::example]
status=FAIL

[In-document [Root Node].find: Attribute ends with selector, matching href attributes ending with specified substring (with refNode Element): a[href$=".org"]]
status=FAIL

[Fragment.find: Unknown pseudo-element: div::example]
status=FAIL

[In-document [Context Element].find: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): [class*= apple]]
status=FAIL

[In-document.find: ID selector, matching id values using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi, #\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[Document.find: Invalid class: ..test]
status=FAIL

[In-document.find: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2]
status=FAIL

[Detached Element.find: Invalid namespace: ^|div]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with refNode Element): [title~=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document [Context Element].findAll: :nth-child selector, matching every third child element (with no refNodes): li:nth-child(3n)]
status=FAIL

[In-document [Context Element].findAll: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with no refNodes): #attr-hyphen-div1[lang|="en"]]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type="hidden"],#attr-value input[type=\'radio\']]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~="\\0000e9"]]
status=FAIL

[In-document Element.findAll: Unknown pseudo-class: div:example]
status=FAIL

[Fragment.findAll: Invalid class: .bar.]
status=FAIL

[In-document.findAll: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2]
status=FAIL

[Document.find: Invalid class: .5cm]
status=FAIL

[In-document [Context Element].findAll: :nth-of-type selector, matching the third em element (with no refNodes): em:nth-of-type(3)]
status=FAIL

[In-document Element.findAll: Invalid combinator: div & address, p]
status=FAIL

[Detached Element.findAll: Invalid group of selectors: div,]
status=FAIL

[In-document [Root Node].findAll: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with refNode Element):  em:only-of-type]
status=FAIL

[In-document [Context Element].findAll: :first-of-type selector, matching the first em element (with no refNodes): em:first-of-type]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector, not matching align attribute with incorrect value (with refNode Element): [align="centera"]]
status=FAIL

[Document.findAll: Invalid combinator: div ++ address, p]
status=FAIL

[In-document [Context Element].find: :pseudo-only-child pseudo-class selector, matching only-child em elements (with no refNodes): em:only-child]
status=FAIL

[In-document [Root Node].findAll: Attribute hyphen-separated list selector, not matching incorrect value (with refNode Element): #attr-hyphen-div4[lang|="es-AR"]]
status=FAIL

[In-document.find: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2]
status=FAIL

[In-document.find: ID selector, not matching non-existent ancestor (with no refNodes): #none #id-div1]
status=FAIL

[Fragment.findAll: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[In-document.findAll: ID selector, matching element with id with escaped character (with no refNodes): #\\#foo\\:bar]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang*="-CH"]]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=" apple"]]
status=FAIL

[Fragment.findAll null]
status=FAIL

[In-document Element.find: Unknown pseudo-class: :example]
status=FAIL

[In-document.find: :root pseudo-class selector, matching document root element (with no refNodes): :root]
status=FAIL

[Detached Element.find: Invalid pseudo-element: :::before]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*=\'orange \']]
status=FAIL

[In-document [Root Node].find: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with refNode Element):  :link, #pseudo-link :visited]
status=FAIL

[Detached Element.findAll: Invalid class: .foo..quux]
status=FAIL

[In-document [Context Element].find: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type=\'hidden\'],#attr-value input[type=\'radio\']]
status=FAIL

[In-document Element.findAll: Unknown pseudo-element: ::example]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]]
status=FAIL

[In-document [Context Element].findAll: Universal selector, matching all grandchildren of the specified reference element (with no refNodes): >*>*]
status=FAIL

[Document.findAll: Undeclared namespace: ns|div]
status=FAIL

[In-document [Context Element].find: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=" apple"]]
status=FAIL

[In-document [Root Node].findAll: :nth-last-of-type selector, matching the thrid last em element (with refNode Element): em:nth-last-of-type(3)]
status=FAIL

[In-document.findAll: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2]
status=FAIL

[Detached Element: new NodeList]
status=FAIL

[In-document Element.find: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[In-document [Context Element].findAll: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): :only-child]
status=FAIL

[In-document [Context Element].find: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$="apple "]]
status=FAIL

[In-document [Root Node].findAll: :empty pseudo-class selector, matching all empty elements (with refNode Element): :empty]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]]
status=FAIL

[Fragment.findAll: Invalid class: .foo..quux]
status=FAIL

[Fragment.findAll: Invalid combinator: div >> address, p]
status=FAIL

[In-document [Context Element].find: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): span:nth-of-type(2n-1)]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=" apple"]]
status=FAIL

[Document.find: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document [Root Node].findAll: :first-of-type selector, matching the first td element in each table row (with refNode Element): tr :first-of-type]
status=FAIL

[Fragment.findAll: Invalid class: ..test]
status=FAIL

[In-document.findAll: Namespace selector, matching any elements in no namespace only (with no refNodes): #no-namespace |*]
status=FAIL

[Document.find: Invalid namespace: $|div]
status=FAIL

[In-document [Root Node].findAll: :first-child pseudo-class selector, doesn\'t match non-first-child elements (with refNode Element): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child]
status=FAIL

[In-document.findAll: ::first-line pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-line]
status=FAIL

[In-document [Context Element].find: :nth-last-child selector, matching the third last child element (with no refNodes): :nth-last-child(3)]
status=FAIL

[In-document Element.find undefined]
status=FAIL

[In-document.findAll: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div]
status=FAIL

[In-document.find: :lang pseudo-class selector, not matching incorrect language (with no refNodes): #pseudo-lang-div4:lang(es-AR)]
status=FAIL

[In-document [Context Element].find: :last-of-type selector, matching the last em elemnet (with no refNodes): em:last-of-type]
status=FAIL

[In-document.findAll: :not pseudo-class selector, matching nothing (with no refNodes): :not(*|*)]
status=FAIL

[Detached Element.findAll: Invalid combinator: div >> address, p]
status=FAIL

[In-document Element.findAll: Invalid ID: #]
status=FAIL

[In-document [Context Element].find: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang*="-CH"]]
status=FAIL

[In-document.findAll: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2]
status=FAIL

[In-document [Root Node].find: Universal selector, matching all grandchildren of the specified reference element (with refNode Element): >*>*]
status=FAIL

[In-document [Context Element].findAll: :last-child pseudo-class selector, doesn\'t match non-last-child elements (with no refNodes): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, matching align attribute with value (with refNode Element): .attr-presence-div1[align]]
status=FAIL

[Detached Element.find: Undeclared namespace: ns|div]
status=FAIL

[In-document [Context Element].findAll: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): a[href^="http://www"]]
status=FAIL

[In-document Element.find: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document [Root Node].find: Universal selector, matching all descendants of the specified reference element (with refNode Element): *]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*=\'orange \']]
status=FAIL

[In-document [Root Node].findAll: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with refNode Element): :nth-last-child(4n-1)]
status=FAIL

[In-document Element.findAll: Invalid class: .5cm]
status=FAIL

[Detached Element.find: Invalid ID: #]
status=FAIL

[In-document.find: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4]
status=FAIL

[Document.findAll: Undeclared namespace: :not(ns|div)]
status=FAIL

[In-document [Context Element].find: :empty pseudo-class selector, matching empty p elements (with no refNodes): p:empty]
status=FAIL

[In-document.find: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana]
status=FAIL

[Fragment supports findAll]
status=FAIL

[Document.findAll: Invalid pseudo-element: :::before]
status=FAIL

[In-document.findAll: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector, not matching class attribute with partial value (with no refNodes): [data-attr-whitespace~="div"]]
status=FAIL

[In-document Element.find: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, matching custom data-* attribute (with refNode Element): [data-attr-presence]]
status=FAIL

[In-document [Root Node].find: Attribute value selector, matching attribute with value using non-ASCII characters (with refNode Element): [data-attr-value=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector, not matching class attribute with partial value (with refNode Element): [data-attr-whitespace~="div"]]
status=FAIL

[In-document [Root Node].findAll: Universal selector, matching all descendants of the specified reference element (with refNode Element): *]
status=FAIL

[In-document [Context Element].find: Attribute value selector, not matching align attribute with incorrect value (with no refNodes): [align="centera"]]
status=FAIL

[In-document Element.find: Undeclared namespace: ns|div]
status=FAIL

[In-document [Root Node].findAll: :first-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:first-child]
status=FAIL

[In-document [Context Element].findAll: :link and :visited pseudo-class selectors, matching link elements with href attributes (with no refNodes):  :link, #head :visited]
status=FAIL

[In-document.find: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): a[href*=".org"]]
status=FAIL

[Fragment.find: Unknown pseudo-class: :example]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]]
status=FAIL

[In-document [Context Element].find: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|="fr"]]
status=FAIL

[In-document.find: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4]
status=FAIL

[In-document.find: General sibling combinator, not matching element with id that is not a sibling after an element with id (with no refNodes): #sibling-div2~#sibling-div3, #sibling-div2~#sibling-div1]
status=FAIL

[In-document [Context Element].find: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=\' apple\']]
status=FAIL

[In-document.find: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi.\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): [title~=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4]
status=FAIL

[Document.findAll: Invalid combinator: div >> address, p]
status=FAIL

[In-document [Root Node].find: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with refNode Element): input[type=hidden],#attr-value input[type=radio]]
status=FAIL

[In-document Element.mozMatchesSelector: ID selector, matching id values using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi, #\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[In-document [Context Element].find: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): :nth-last-of-type(2n)]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang*="en-"]]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector, matching align attribute with value (with no refNodes): [align="center"]]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, matching attribute with non-ASCII characters (with refNode Element): ul[data-\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[Detached Element.find: Invalid combinator: div ++ address, p]
status=FAIL

[In-document.find: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): body #descendant-div1]
status=FAIL

[In-document.find: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): [class~="div1"]]
status=FAIL

[In-document [Context Element].find: :nth-child selector, matching the third child element (with no refNodes): :nth-child(3)]
status=FAIL

[In-document.findAll: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1]
status=FAIL

[In-document [Context Element].findAll: :nth-last-of-type selector, matching the thrid last em element (with no refNodes): em:nth-last-of-type(3)]
status=FAIL

[In-document [Root Node].findAll: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with refNode Element): span:nth-of-type(2n-1)]
status=FAIL

[In-document.find: Class selector, matching element with specified class (with no refNodes): .class-p]
status=FAIL

[In-document Element.findAll null]
status=FAIL

[In-document.findAll: :not pseudo-class selector, matching nothing (with no refNodes): :not(*)]
status=FAIL

[In-document [Context Element].find: :first-child pseudo-class selector, doesn\'t match non-first-child elements (with no refNodes): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child]
status=FAIL

[In-document.findAll: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi.\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[In-document [Context Element].findAll: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang^="en-"]]
status=FAIL

[In-document [Root Node].findAll: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple ]]
status=FAIL

[In-document.find: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2]
status=FAIL

[In-document [Root Node].find: Attribute contains selector, matching href attributes ending with specified substring (with refNode Element): a[href*=".org"]]
status=FAIL

[In-document [Root Node].find: :pseudo-only-child pseudo-class selector, matching all only-child elements (with refNode Element): :only-child]
status=FAIL

[Document.findAll: Unknown pseudo-class: :example]
status=FAIL

[In-document.findAll: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~="\\e9"]]
status=FAIL

[Fragment.findAll: Invalid combinator: div ++ address, p]
status=FAIL

[In-document Element.find: Invalid combinator: div & address, p]
status=FAIL

[Detached Element.findAll undefined]
status=FAIL

[Document.findAll: Invalid namespace: $|div]
status=FAIL

[In-document [Context Element].findAll: :last-of-type selector, matching the last em elemnet (with no refNodes): em:last-of-type]
status=FAIL

[In-document [Context Element].find: :last-of-type selector, matching the last of every type of element (with no refNodes): :last-of-type]
status=FAIL

[In-document.findAll: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3]
status=FAIL

[In-document Element.findAll: Invalid class: .bar.]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]]
status=FAIL

[In-document.findAll: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with refNode Element): [class*="ple banana ora"]]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with refNode Element): [class*=\'ple banana ora\']]
status=FAIL

[Detached Element.find: Invalid character: }]
status=FAIL

[Detached Element.find: Invalid character: {]
status=FAIL

[In-document [Context Element].find: Universal selector, matching all descendants of the specified reference element (with no refNodes): *]
status=FAIL

[In-document [Context Element].find: :root pseudo-class selector, not matching document root element (with no refNodes): :root]
status=FAIL

[In-document [Context Element].findAll: Attribute hyphen-separated list selector, not matching incorrect value (with no refNodes): #attr-hyphen-div4[lang|="es-AR"]]
status=FAIL

[In-document.findAll: :target pseudo-class selector, matching the element referenced by the URL fragment identifier (with no refNodes): :target]
status=FAIL

[In-document [Context Element].findAll: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): :nth-last-of-type(2n)]
status=FAIL

[Detached Element.find: Invalid character: ]]
status=FAIL

[Detached Element.find: Invalid character: []
status=FAIL

[In-document [Context Element].find: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): [class*="ple banana ora"]]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3]
status=FAIL

[Detached Element.find: Invalid character: >]
status=FAIL

[Detached Element.find: Invalid character: <]
status=FAIL

[Detached Element.find: Invalid character: (]
status=FAIL

[Detached Element.find: Invalid character: )]
status=FAIL

[Fragment.find: Invalid combinator: div ++ address, p]
status=FAIL

[In-document [Context Element].find: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo="\\e9"]]
status=FAIL

[In-document.findAll: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong]
status=FAIL

[Detached Element supports findAll]
status=FAIL

[In-document [Root Node].findAll: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=" apple"]]
status=FAIL

[In-document Element.findAll: Invalid class: ..test]
status=FAIL

[In-document [Root Node].findAll: :empty pseudo-class selector, matching empty p elements (with refNode Element): p:empty]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector, not matching align attribute with partial value (with refNode Element): [align="c"]]
status=FAIL

[In-document.findAll: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong]
status=FAIL

[In-document [Context Element].findAll: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=" apple"]]
status=FAIL

[In-document.find: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2]
status=FAIL

[Fragment.findAll: Undeclared namespace: :not(ns|div)]
status=FAIL

[In-document [Root Node].find: Attribute value selector, not matching align attribute with incorrect value (with refNode Element): [align="centera"]]
status=FAIL

[In-document [Root Node].findAll: Attribute ends with selector, matching href attributes ending with specified substring (with refNode Element): a[href$=".org"]]
status=FAIL

[In-document Element.find: Invalid class: .bar.]
status=FAIL

[In-document Element.find: Invalid class: .]
status=FAIL

[In-document Element.findAll: Invalid pseudo-element: :::before]
status=FAIL

[Fragment.findAll: Invalid character: {]
status=FAIL

[Fragment.findAll: Invalid character: }]
status=FAIL

[In-document [Context Element].find: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): :nth-child(4n-1)]
status=FAIL

[Detached Element.findAll: Unknown pseudo-class: :example]
status=FAIL

[In-document [Context Element].find: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=\' apple\']]
status=FAIL

[In-document [Context Element].find: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes):  :only-of-type]
status=FAIL

[In-document [Context Element].findAll: :last-of-type selector, matching the last of every type of element (with no refNodes): :last-of-type]
status=FAIL

[Fragment.findAll: Invalid character: >]
status=FAIL

[Fragment.findAll: Invalid character: []
status=FAIL

[Fragment.findAll: Invalid character: ]]
status=FAIL

[Detached Element.findAll: Invalid combinator: div & address, p]
status=FAIL

[Document.find: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, not matching default option without selected attribute (with no refNodes): #attr-presence-select1 option[selected]]
status=FAIL

[In-document [Root Node].find: :root pseudo-class selector, not matching document root element (with refNode Element): :root]
status=FAIL

[Fragment.findAll: Invalid character: <]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): [class*= banana ]]
status=FAIL

[In-document [Root Node].find: Attribute contains selector, matching href attributes containing specified substring (with refNode Element): a[href*=".example."]]
status=FAIL

[Fragment.findAll: Invalid character: (]
status=FAIL

[Fragment.findAll: Invalid character: )]
status=FAIL

[In-document.find: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4]
status=FAIL

[In-document [Root Node].find: Attribute value selector, matching align attribute with empty value (with refNode Element): [align=""]]
status=FAIL

[In-document [Root Node].findAll: Attribute ends with selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang$="-CH"]]
status=FAIL

[In-document.find: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector, matching href attributes beginning with specified substring (with refNode Element): a[href*="http://www"]]
status=FAIL

[In-document [Root Node].find: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with refNode Element):  em:only-of-type]
status=FAIL

[In-document.find: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3]
status=FAIL

[Fragment.findAll tree order]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with refNode Element): [class*=\'ple banana ora\']]
status=FAIL

[Document.find: Unknown pseudo-element: div::example]
status=FAIL

[In-document [Root Node].find: :last-of-type selector, matching the last of every type of element (with refNode Element): :last-of-type]
status=FAIL

[In-document [Context Element].find: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang^="en-"]]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p]
status=FAIL

[In-document [Context Element].find: :first-child pseudo-class selector, matching first child div element (with no refNodes): div:first-child]
status=FAIL

[In-document.findAll: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2]
status=FAIL

[In-document [Root Node].findAll: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with refNode Element): [class^= apple]]
status=FAIL

[Detached Element.findAll: Invalid class: .bar.]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, not matching attribute with similar name (with refNode Element): .attr-presence-div3[align], .attr-presence-div4[align]]
status=FAIL

[In-document [Context Element].find: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang*="en-"]]
status=FAIL

[In-document.findAll: Descendant combinator, not matching element with id that is not a descendant of an element with id (with no refNodes): #descendant-div1 #descendant-div4]
status=FAIL

[In-document [Context Element].find: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): a[href*=".example."]]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type=\'hidden\'],#attr-value input[type=\'radio\']]
status=FAIL

[Fragment.findAll: Invalid class: .]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*=\'orange \']]
status=FAIL

[Detached Element.find: Invalid class: .foo..quux]
status=FAIL

[In-document.find: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): [class~="div1"]]
status=FAIL

[In-document.findAll: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana]
status=FAIL

[In-document [Root Node].findAll: Attribute hyphen-separated list selector, matching lang attribute with exact value (with refNode Element): #attr-hyphen-div2[lang|="fr"]]
status=FAIL

[In-document [Context Element].findAll: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang$="-CH"]]
status=FAIL

[In-document Element: new NodeList]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector, matching class attribute with value (with refNode Element): [class~="div1"]]
status=FAIL

[In-document.findAll: :root pseudo-class selector, matching document root element (with no refNodes): :root]
status=FAIL

[In-document Element supports findAll]
status=FAIL

[In-document.find: Namespace selector, matching element with any namespace (with no refNodes): #any-namespace *|div]
status=FAIL

[In-document [Root Node].find: Attribute value selector, not matching align attribute with partial value (with refNode Element): [align="c"]]
status=FAIL

[In-document [Root Node].findAll: :root pseudo-class selector, not matching document root element (with refNode Element): :root]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo="\\e9"]]
status=FAIL

[In-document.findAll: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2]
status=FAIL

[In-document.find: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong]
status=FAIL

[Fragment.findAll: Invalid namespace: $|div]
status=FAIL

[In-document Element.find: Invalid group of selectors: div,]
status=FAIL

[In-document [Context Element].find: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): li:nth-last-child(2n+4)]
status=FAIL

[Fragment.findAll: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document.findAll: :before pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:before]
status=FAIL

[In-document.findAll: :first-line pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-line]
status=FAIL

[Fragment.find: Invalid class: .foo..quux]
status=FAIL

[In-document [Context Element].find: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type="hidden"],#attr-value input[type=\'radio\']]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector, not matching class attribute with partial value (with no refNodes): [data-attr-whitespace~="div"]]
status=FAIL

[In-document.findAll: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector, matching attribute with value using non-ASCII characters (with refNode Element): [data-attr-value=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document [Context Element].findAll: :empty pseudo-class selector, matching all empty elements (with no refNodes): :empty]
status=FAIL

[Detached Element.find: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document [Context Element].find: :nth-last-child selector, matching every third child element from the end (with no refNodes): li:nth-last-child(3n)]
status=FAIL

[Document.findAll: Unknown pseudo-element: div::example]
status=FAIL

[In-document.find: ID selector, matching element with id with escaped character (with no refNodes): #test\\.foo\\[5\\]bar]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]]
status=FAIL

[Document.find: Invalid class: .bar.]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]]
status=FAIL

[In-document.findAll: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange]
status=FAIL

[In-document [Context Element].findAll: Universal selector, matching all descendants of the specified reference element (with no refNodes): *]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector, matching align attribute with empty value (with refNode Element): [align=""]]
status=FAIL

[In-document [Root Node].findAll: :nth-last-of-type selector, matching every second last element of their type (with refNode Element): :nth-last-of-type(2n)]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~="\\e9"]]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector, not matching align attribute with incorrect value (with no refNodes): [align="centera"]]
status=FAIL

[In-document.find: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p]
status=FAIL

[Fragment.findAll: Invalid namespace: ^|div]
status=FAIL

[In-document [Root Node].find: :nth-last-child selector, matching every third child element from the end (with refNode Element): li:nth-last-child(3n)]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type=\'hidden\'],#attr-value input[type=\'radio\']]
status=FAIL

[Document.find: Unknown pseudo-class: div:example]
status=FAIL

[In-document [Root Node].findAll: Attribute begins with selector, matching href attributes beginning with specified substring (with refNode Element): a[href^="http://www"]]
status=FAIL

[In-document [Root Node].find: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with refNode Element): #attr-hyphen-div1[lang|="en"]]
status=FAIL

[Document.find: Invalid character: }]
status=FAIL

[Document.find: Invalid character: {]
status=FAIL

[In-document [Context Element].find: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:last-child]
status=FAIL

[Document.find: Invalid character: ]]
status=FAIL

[Document.find: Invalid character: []
status=FAIL

[Document.find: Undeclared namespace: :not(ns|div)]
status=FAIL

[Fragment.findAll: Invalid group of selectors: div,]
status=FAIL

[In-document [Context Element].find: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$=\'apple \']]
status=FAIL

[In-document [Context Element].findAll: :last-of-type selector, matching the last td element in each table row (with no refNodes): tr :last-of-type]
status=FAIL

[In-document [Root Node].find: :last-of-type selector, matching the last td element in each table row (with refNode Element): tr :last-of-type]
status=FAIL

[Document.find: Invalid character: <]
status=FAIL

[Document.find: Invalid character: >]
status=FAIL

[In-document [Root Node].find: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple ]]
status=FAIL

[In-document.findAll: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3]
status=FAIL

[In-document.findAll: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1]
status=FAIL

[Document.find: Invalid character: )]
status=FAIL

[Document.find: Invalid character: (]
status=FAIL

[In-document.find: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange]
status=FAIL

[In-document [Root Node].find: Universal selector, matching all children of the specified reference element (with refNode Element): >*]
status=FAIL

[In-document Element.mozMatchesSelector: Universal selector, matching all grandchildren of the specified reference element (with refNode Element): >*>*]
status=FAIL

[In-document.findAll: :first-letter pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-letter]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with refNode Element): input[type=hidden],#attr-value input[type=radio]]
status=FAIL

[In-document [Root Node].findAll: :nth-child selector, matching every third child element (with refNode Element): li:nth-child(3n)]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, matching custom data-* attribute (with refNode Element): [data-attr-presence]]
status=FAIL

[In-document [Root Node].find: :nth-child selector, matching the third child element (with refNode Element): :nth-child(3)]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, matching option with selected attribute (with refNode Element): #attr-presence-select2 option[selected]]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector, not matching class attribute with empty value (with no refNodes): [class~=""]]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*="orange "]]
status=FAIL

[Detached Element: static NodeList]
status=FAIL

[In-document [Root Node].findAll: Universal selector, matching all grandchildren of the specified reference element (with refNode Element): >*>*]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3]
status=FAIL

[In-document [Root Node].find: :last-of-type selector, matching the last em elemnet (with refNode Element): em:last-of-type]
status=FAIL

[In-document.findAll: Child combinator, not matching element with id that is not a child of an element with class (with no refNodes): #child-div1>.child-div3]
status=FAIL

[In-document [Context Element].findAll: Universal selector, matching all children of the specified reference element (with no refNodes): >*]
status=FAIL

[In-document Element.findAll: Invalid combinator: div ++ address, p]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document.findAll: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4]
status=FAIL

[In-document Element supports find]
status=FAIL

[Fragment.find: Invalid class: .]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, not matching attribute with similar name (with refNode Element): .attr-presence-div3[align], .attr-presence-div4[align]]
status=FAIL

[In-document.findAll: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with refNode Element): a[rel~="book mark"]]
status=FAIL

[Detached Element.find undefined]
status=FAIL

[In-document Element.findAll: Unknown pseudo-element: div::example]
status=FAIL

[In-document.find: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[In-document.findAll: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div]
status=FAIL

[In-document.find: :not pseudo-class selector, matching nothing (with no refNodes): :not(*)]
status=FAIL

[In-document [Root Node].find: Attribute contains selector, matching href attributes beginning with specified substring (with refNode Element): a[href*="http://www"]]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): [title~=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~="bookmark"],#attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~="bookmark"],#attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[In-document [Context Element].findAll: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$="apple "]]
status=FAIL

[In-document [Context Element].find: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): span:nth-last-of-type(2n-1)]
status=FAIL

[Document.findAll: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[In-document.find: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar]
status=FAIL

[In-document.find: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2]
status=FAIL

[In-document.find: Namespace selector, matching any elements in no namespace only (with no refNodes): #no-namespace |*]
status=FAIL

[In-document.find: :before pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:before]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with refNode Element): [title~=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document [Root Node].findAll: Attribute hyphen-separated list selector, matching lang attribute with partial value (with refNode Element): #attr-hyphen-div3[lang|="en"]]
status=FAIL

[In-document [Root Node].find: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=" apple"]]
status=FAIL

[In-document [Root Node].find: :first-of-type selector, matching the first em element (with refNode Element): em:first-of-type]
status=FAIL

[In-document [Root Node].findAll: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with refNode Element): span:nth-last-of-type(2n-1)]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): [TiTlE]]
status=FAIL

[In-document.findAll: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[In-document [Root Node].find: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$=\'apple \']]
status=FAIL

[In-document [Root Node].find: Attribute begins with selector, matching href attributes beginning with specified substring (with refNode Element): a[href^="http://www"]]
status=FAIL

[In-document.findAll: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): body #descendant-div1]
status=FAIL

[In-document.find: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1]
status=FAIL

[In-document.find: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2]
status=FAIL

[In-document [Root Node].findAll: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with refNode Element): li:nth-last-child(2n+4)]
status=FAIL

[In-document [Root Node].findAll: :last-of-type selector, matching the last em elemnet (with refNode Element): em:last-of-type]
status=FAIL

[In-document.find: ID selector, matching id value using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi]
status=FAIL

[In-document [Root Node].find: :first-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:first-child]
status=FAIL

[In-document.findAll: ::after pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::after]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value="\\e9"]]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]]
status=FAIL

[In-document.find: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)]
status=FAIL

[In-document.findAll: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar]
status=FAIL

[Fragment: static NodeList]
status=FAIL

[In-document.findAll: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate]
status=FAIL

[In-document [Root Node].find: :last-child pseudo-class selector, doesn\'t match non-last-child elements (with refNode Element): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child]
status=FAIL

[In-document Element.find: Invalid pseudo-element: :::before]
status=FAIL

[In-document Element.findAll: Invalid class: .foo..quux]
status=FAIL

[In-document [Context Element].find: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): a[href*="http://www"]]
status=FAIL

[In-document.findAll: ID selector, not matching non-existent ancestor (with no refNodes): #none #id-div1]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector, not matching align attribute with partial value (with no refNodes): [align="c"]]
status=FAIL

[In-document.findAll: ID selector, not matching non-existent descendant (with no refNodes): #id #none]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=" apple"]]
status=FAIL

[In-document.find: ID selector, not matching non-existent descendant (with no refNodes): #id #none]
status=FAIL

[In-document Element.find: Invalid character: {]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-whitespace~="\\0000e9"]]
status=FAIL

[In-document Element.find: Invalid character: }]
status=FAIL

[Detached Element.find: Invalid class: .]
status=FAIL

[In-document [Root Node].findAll: Attribute presence selector, matching align attribute with empty value (with refNode Element): .attr-presence-div2[align]]
status=FAIL

[In-document Element.find: Invalid class: .foo..quux]
status=FAIL

[In-document Element.find: Invalid character: []
status=FAIL

[In-document Element.find: Invalid character: ]]
status=FAIL

[Fragment.findAll: Undeclared namespace: ns|div]
status=FAIL

[In-document [Context Element].find: :nth-child selector, matching every third child element (with no refNodes): li:nth-child(3n)]
status=FAIL

[Detached Element.findAll: Unknown pseudo-class: div:example]
status=FAIL

[In-document Element.find: Invalid character: >]
status=FAIL

[In-document Element.find: Invalid character: <]
status=FAIL

[In-document [Context Element].find: :nth-of-type selector, matching every second element of their type (with no refNodes): :nth-of-type(2n)]
status=FAIL

[In-document Element.find: Invalid character: (]
status=FAIL

[In-document Element.find: Invalid character: )]
status=FAIL

[In-document [Root Node].find: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with refNode Element):  :only-of-type]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3]
status=FAIL

[In-document.findAll: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked]
status=FAIL

[Document.findAll: Invalid combinator: div & address, p]
status=FAIL

[In-document.find: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3]
status=FAIL

[In-document [Root Node].find: :nth-last-of-type selector, matching every second last element of their type (with refNode Element): :nth-last-of-type(2n)]
status=FAIL

[In-document.find: ID selector, matching element with specified id (with no refNodes): #id #id-div1]
status=FAIL

[In-document Element.findAll: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[In-document [Context Element].findAll: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=\' apple\']]
status=FAIL

[In-document.findAll: ::before pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::before]
status=FAIL

[Detached Element.findAll: Invalid character: (]
status=FAIL

[Detached Element.findAll: Invalid character: )]
status=FAIL

[In-document.findAll: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2]
status=FAIL

[In-document.findAll: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1]
status=FAIL

[Detached Element.findAll: Invalid character: <]
status=FAIL

[Detached Element.findAll: Invalid character: >]
status=FAIL

[In-document [Context Element].find: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:first-child]
status=FAIL

[In-document [Root Node].findAll: :nth-of-type selector, matching every second element of their type (with refNode Element): :nth-of-type(2n)]
status=FAIL

[In-document.findAll: :lang pseudo-class selector, not matching incorrect language (with no refNodes): #pseudo-lang-div4:lang(es-AR)]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=\'bookmark\'],  #attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[Document.find: Undeclared namespace: ns|div]
status=FAIL

[Detached Element.findAll: Invalid character: {]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): [class*=\'ple banana ora\']]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4]
status=FAIL

[Document.findAll: Invalid class: .5cm]
status=FAIL

[Document.find: Invalid pseudo-element: :::before]
status=FAIL

[Detached Element.findAll: Invalid class: .5cm]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, not matching attribute with similar name (with no refNodes): .attr-presence-div3[align], .attr-presence-div4[align]]
status=FAIL

[Detached Element.findAll: Invalid character: []
status=FAIL

[Detached Element.findAll: Invalid character: ]]
status=FAIL

[In-document.find: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): [TiTlE]]
status=FAIL

[Fragment.find: Invalid ID: #]
status=FAIL

[In-document [Context Element].find: :empty pseudo-class selector, matching all empty elements (with no refNodes): :empty]
status=FAIL

[In-document [Root Node].find: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with refNode Element): span:nth-of-type(2n-1)]
status=FAIL

[In-document [Context Element].find: :first-of-type selector, matching the first of every type of element (with no refNodes): :first-of-type]
status=FAIL

[In-document [Root Node].find: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$="apple "]]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3]
status=FAIL

[In-document.find: ::first-letter pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-letter]
status=FAIL

[In-document Element.mozMatchesSelector: ID selector, matching id value using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi]
status=FAIL

[In-document.findAll: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar]
status=FAIL

[Detached Element.findAll: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[In-document.findAll: :lang pseudo-class selector, matching inherited language (with no refNodes): #pseudo-lang-div1:lang(en)]
status=FAIL

[In-document [Root Node].find: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type=\'hidden\'],#attr-value input[type=\'radio\']]
status=FAIL

[Document.findAll: Unknown pseudo-class: div:example]
status=FAIL

[In-document [Context Element].find: Attribute hyphen-separated list selector, not matching incorrect value (with no refNodes): #attr-hyphen-div4[lang|="es-AR"]]
status=FAIL

[In-document [Root Node].find: :nth-of-type selector, matching the third em element (with refNode Element): em:nth-of-type(3)]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with refNode Element): [class*=orange ]]
status=FAIL

[In-document [Context Element].find: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document [Context Element].findAll: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): a[href$=".org"]]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, matching align attribute with value (with refNode Element): .attr-presence-div1[align]]
status=FAIL

[In-document Element.findAll: Undeclared namespace: :not(ns|div)]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with refNode Element): [class*= apple]]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector, not matching class attribute with empty value (with refNode Element): [class~=""]]
status=FAIL

[In-document [Root Node].find: :first-child pseudo-class selector, matching first child div element (with refNode Element): div:first-child]
status=FAIL

[Fragment.findAll: Empty String: ]
status=FAIL

[In-document Element.mozMatchesSelector: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi]
status=FAIL

[In-document.findAll: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi]
status=FAIL

[Document.find: Unknown pseudo-class: :example]
status=FAIL

[In-document.findAll: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div]
status=FAIL

[Fragment.findAll: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~="\\0000e9"]]
status=FAIL

[In-document [Context Element].findAll: :nth-last-child selector, matching the third last child element (with no refNodes): :nth-last-child(3)]
status=FAIL

[Document.find: Invalid combinator: div >> address, p]
status=FAIL

[In-document [Root Node].find: :last-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:last-child]
status=FAIL

[In-document [Context Element].findAll: :first-child pseudo-class selector, doesn\'t match non-first-child elements (with no refNodes): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child]
status=FAIL

[Document.findAll: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document [Root Node].find: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang^="en-"]]
status=FAIL

[In-document [Context Element].find: Attribute value selector, matching align attribute with value (with no refNodes): [align="center"]]
status=FAIL

[In-document [Context Element].find: Attribute value selector, matching align attribute with empty value (with no refNodes): [align=""]]
status=FAIL

[In-document [Context Element].find: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with no refNodes): #attr-hyphen-div1[lang|="en"]]
status=FAIL

[In-document.find: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p]
status=FAIL

[Detached Element.findAll: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document Element.mozMatchesSelector: Universal selector, matching all descendants of the specified reference element (with refNode Element): *]
status=FAIL

[In-document.findAll: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3]
status=FAIL

[In-document [Root Node].find: Attribute begins with selector, not matching class attribute not beginning with specified substring (with refNode Element): [class^=apple]]
status=FAIL

[Fragment.find: Invalid group of selectors: div,]
status=FAIL

[In-document.find: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div]
status=FAIL

[In-document [Context Element].find: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes):  em:only-of-type]
status=FAIL

[In-document Element.findAll: Invalid character: <]
status=FAIL

[In-document [Context Element].find: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=\'bookmark\'],  #attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[In-document [Root Node].find: :last-child pseudo-class selector, matching last child div element (with refNode Element): div:last-child]
status=FAIL

[In-document Element.findAll: Invalid character: (]
status=FAIL

[In-document Element.findAll: Invalid character: )]
status=FAIL

[In-document Element.findAll: Empty String: ]
status=FAIL

[In-document [Root Node].find: :nth-last-child selector, matching the third last child element (with refNode Element): :nth-last-child(3)]
status=FAIL

[Document.find: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[In-document.find: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1]
status=FAIL

[In-document.find: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3]
status=FAIL

[In-document Element.findAll: Invalid character: }]
status=FAIL

[In-document.find: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3]
status=FAIL

[In-document Element.findAll: Invalid character: {]
status=FAIL

[In-document Element.find: Unknown pseudo-element: ::example]
status=FAIL

[In-document [Root Node].findAll: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang^="en-"]]
status=FAIL

[In-document [Context Element].find: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*="orange "]]
status=FAIL

[In-document.findAll: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)]
status=FAIL

[Detached Element.find: Invalid namespace: $|div]
status=FAIL

[In-document Element.findAll: Invalid character: ]]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-\xe4\xb8\xad\xe6\x96\x87]]
status=FAIL

[In-document Element.findAll: Invalid character: []
status=FAIL

[In-document [Root Node].findAll: Attribute value selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-value_foo="\\e9"]]
status=FAIL

[In-document.findAll: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4]
status=FAIL

[Detached Element.find null]
status=FAIL

[Document.findAll: Unknown pseudo-element: ::example]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-whitespace_foo~="\\e9"]]
status=FAIL

[Detached Element.findAll: Unknown pseudo-element: ::example]
status=FAIL

[In-document.find: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div]
status=FAIL

[Fragment.find: Invalid combinator: div >> address, p]
status=FAIL

[In-document [Context Element].find: :first-of-type selector, matching the first td element in each table row (with no refNodes): tr :first-of-type]
status=FAIL

[In-document [Context Element].findAll: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple ]]
status=FAIL

[In-document.find: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi]
status=FAIL

[In-document [Context Element].find: Attribute ends with selector, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple]]
status=FAIL

[In-document.find: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4]
status=FAIL

[Fragment: new NodeList]
status=FAIL

[Document: static NodeList]
status=FAIL

[In-document.find: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)]
status=FAIL

[Detached Element.find: Invalid group of selectors: div,]
status=FAIL

[Document.find: Invalid combinator: div ++ address, p]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with refNode Element): [class*= apple]]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4]
status=FAIL

[In-document.findAll: Class selector, matching element with specified class (with no refNodes): .class-p]
status=FAIL

[Detached Element.findAll: Invalid character: }]
status=FAIL

[In-document Element.findAll undefined]
status=FAIL

[Document.find: Invalid class: .foo..quux]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): [class*="ple banana ora"]]
status=FAIL

[Fragment.findAll: Invalid pseudo-element: :::before]
status=FAIL

[Detached Element.findAll: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document [Context Element].findAll: Attribute ends with selector, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple]]
status=FAIL

[In-document [Root Node].find: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with refNode Element): [class^= apple]]
status=FAIL

[In-document [Context Element].find: :last-child pseudo-class selector, doesn\'t match non-last-child elements (with no refNodes): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child]
status=FAIL

[In-document [Context Element].findAll: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes):  :only-of-type]
status=FAIL

[Detached Element.findAll: Invalid ID: #]
status=FAIL

[In-document [Root Node].find: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with refNode Element): li:nth-last-child(2n+4)]
status=FAIL

[In-document [Context Element].findAll: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:last-child]
status=FAIL

[In-document.findAll: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2]
status=FAIL

[In-document [Root Node].find: :link and :visited pseudo-class selectors, matching link elements with href attributes (with refNode Element):  :link, #head :visited]
status=FAIL

[Document.find: Invalid group of selectors: div,]
status=FAIL

[In-document [Root Node].find: :nth-of-type selector, matching every second element of their type (with refNode Element): :nth-of-type(2n)]
status=FAIL

[In-document.find: Namespace selector, matching div elements in no namespace only (with no refNodes): #no-namespace |div]
status=FAIL

[Document.find: Invalid class: .]
status=FAIL

[Fragment.find: Invalid character: }]
status=FAIL

[Fragment.find: Invalid character: {]
status=FAIL

[In-document [Context Element].findAll: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:first-child]
status=FAIL

[In-document.findAll: Child combinator, not matching element with class that is not a child of an element with class (with no refNodes): .child-div1>.child-div3]
status=FAIL

[Fragment.find: Invalid character: ]]
status=FAIL

[Detached Element.findAll: Undeclared namespace: :not(ns|div)]
status=FAIL

[Fragment.find: Invalid character: []
status=FAIL

[Fragment.find: Invalid class: ..test]
status=FAIL

[Fragment.find: Invalid character: <]
status=FAIL

[Fragment.find: Invalid character: >]
status=FAIL

[In-document [Root Node].findAll: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$="apple "]]
status=FAIL

[Fragment.find: Invalid character: (]
status=FAIL

[Fragment.find: Invalid character: )]
status=FAIL

[In-document [Context Element].findAll: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): :nth-child(4n-1)]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, not matching attribute with similar name (with no refNodes): .attr-presence-div3[align], .attr-presence-div4[align]]
status=FAIL

[In-document.findAll: :after pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:after]
status=FAIL

[Document.find: Invalid combinator: div & address, p]
status=FAIL

[In-document Element.findAll: Undeclared namespace: ns|div]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): a[href*="http://www"]]
status=FAIL

[Fragment.findAll: Unknown pseudo-element: div::example]
status=FAIL

[Detached Element unprefixed matches method.]
status=FAIL

[In-document.find: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2]
status=FAIL

[In-document [Root Node].findAll: :first-child pseudo-class selector, matching first child div element (with refNode Element): div:first-child]
status=FAIL

[In-document [Root Node].findAll: :last-of-type selector, matching the last td element in each table row (with refNode Element): tr :last-of-type]
status=FAIL

[Fragment.findAll: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[Fragment supports find]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]]
status=FAIL

[In-document.findAll: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=\'bookmark\'],  #attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[In-document [Root Node].find: :pseudo-only-child pseudo-class selector, matching only-child em elements (with refNode Element): em:only-child]
status=FAIL

[In-document [Context Element].findAll: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes):  em:only-of-type]
status=FAIL

[In-document [Root Node].findAll: :last-of-type selector, matching the last of every type of element (with refNode Element): :last-of-type]
status=FAIL

[In-document [Root Node].findAll: Universal selector, matching all children of the specified reference element (with refNode Element): >*]
status=FAIL

[In-document.findAll: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div]
status=FAIL

[In-document [Context Element].findAll: :empty pseudo-class selector, matching empty p elements (with no refNodes): p:empty]
status=FAIL

[In-document.find: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4]
status=FAIL

[Fragment.findAll undefined]
status=FAIL

[In-document Element.findAll: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[In-document.find: :not pseudo-class selector, matching nothing (with no refNodes): :not(*|*)]
status=FAIL

[In-document [Context Element].find: Universal selector, matching all children of the specified reference element (with no refNodes): >*]
status=FAIL

[Detached Element.findAll null]
status=FAIL

[In-document.findAll: Child combinator, not matching element with id that is not a child of an element with id (with no refNodes): #child>#child-div3]
status=FAIL

[Detached Element.findAll: Empty String: ]
status=FAIL

[In-document Element.findAll: Invalid combinator: div ~~ address, p]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector, matching align attribute with value (with refNode Element): [align="center"]]
status=FAIL

[In-document Element.findAll: Invalid namespace: $|div]
status=FAIL

[In-document [Context Element].find: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes):  :link, #pseudo-link :visited]
status=FAIL

[Detached Element.findAll: Undeclared namespace: ns|div]
status=FAIL

[Detached Element supports find]
status=FAIL

[In-document [Context Element].findAll: :nth-last-child selector, matching every third child element from the end (with no refNodes): li:nth-last-child(3n)]
status=FAIL

[In-document [Root Node].findAll: :first-of-type selector, matching the first em element (with refNode Element): em:first-of-type]
status=FAIL

[Document.findAll: Invalid group of selectors: div,]
status=FAIL

[In-document [Context Element].find: Attribute value selector, not matching align attribute with partial value (with no refNodes): [align="c"]]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~="bookmark"],#attr-whitespace a[rel~=\'nofollow\']]
status=FAIL

[In-document [Root Node].find: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=\' apple\']]
status=FAIL

[In-document [Context Element].find: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): a[href*=".org"]]
status=FAIL

[Document.findAll: Invalid character: ]]
status=FAIL

[In-document [Root Node].findAll: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$=\'apple \']]
status=FAIL

[Detached Element.find: Invalid combinator: div >> address, p]
status=FAIL

[In-document [Context Element].find: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): :only-child]
status=FAIL

[In-document.find: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1]
status=FAIL

[Fragment.find: Invalid combinator: div & address, p]
status=FAIL

[Document.findAll: Invalid class: ..test]
status=FAIL

[In-document.find: Child combinator, not matching element with id that is not a child of an element with class (with no refNodes): #child-div1>.child-div3]
status=FAIL

[In-document [Root Node].find: Attribute hyphen-separated list selector, matching lang attribute with partial value (with refNode Element): #attr-hyphen-div3[lang|="en"]]
status=FAIL

[In-document.find: :after pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:after]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-whitespace~="\\0000e9"]]
status=FAIL

[In-document Element.findAll: Invalid class: .]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): [class*=orange ]]
status=FAIL

[In-document [Context Element].findAll: Attribute value selector, matching align attribute with empty value (with no refNodes): [align=""]]
status=FAIL

[In-document Element.mozMatchesSelector: Universal selector, matching all children of the specified reference element (with refNode Element): >*]
status=FAIL

[Fragment.findAll: Unknown pseudo-element: ::example]
status=FAIL

[In-document Element.find: Invalid class: .5cm]
status=FAIL

[Fragment.find: Unknown pseudo-class: div:example]
status=FAIL

[Document.findAll undefined]
status=FAIL

[Fragment.find: Invalid [att=value] selector: [*|*=test]]
status=FAIL

[In-document.find: ::before pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::before]
status=FAIL

[In-document [Context Element].findAll: :first-child pseudo-class selector, matching first child div element (with no refNodes): div:first-child]
status=FAIL

[In-document [Context Element].find: :last-child pseudo-class selector, matching last child div element (with no refNodes): div:last-child]
status=FAIL

[In-document Element.find: Invalid combinator: div >> address, p]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]]
status=FAIL

[In-document [Root Node].find: Attribute contains selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang*="en-"]]
status=FAIL

[In-document.findAll: Namespace selector, matching div elements in no namespace only (with no refNodes): #no-namespace |div]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector, not matching class attribute with empty value (with no refNodes): [class~=""]]
status=FAIL

[Detached Element.find: Invalid [att=value] selector: [class= space unquoted ]]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector, matching href attributes ending with specified substring (with refNode Element): a[href*=".org"]]
status=FAIL

[In-document Element.findAll: Unknown pseudo-class: :example]
status=FAIL

[In-document [Context Element].find: :first-of-type selector, matching the first em element (with no refNodes): em:first-of-type]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div]
status=FAIL

[In-document [Root Node].findAll: :last-child pseudo-class selector, matching last child div element (with refNode Element): div:last-child]
status=FAIL

[In-document.findAll: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3]
status=FAIL

[In-document.findAll: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3]
status=FAIL

[In-document [Context Element].findAll: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with no refNodes): a[rel~="book mark"]]
status=FAIL

[In-document [Context Element].find: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): input[type=hidden],#attr-value input[type=radio]]
status=FAIL

[Detached Element.find: Unknown pseudo-class: :example]
status=FAIL

[In-document.find: Descendant combinator, not matching element with id that is not a descendant of an element with id (with no refNodes): #descendant-div1 #descendant-div4]
status=FAIL

[In-document [Root Node].findAll: :link and :visited pseudo-class selectors, matching link elements with href attributes (with refNode Element):  :link, #head :visited]
status=FAIL

[In-document.find: :lang pseudo-class selector, matching inherited language (with no refNodes): #pseudo-lang-div1:lang(en)]
status=FAIL

[In-document [Root Node].findAll: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=\' apple\']]
status=FAIL

[In-document [Context Element].find: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): :nth-last-child(4n-1)]
status=FAIL

[In-document [Context Element].find: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang$="-CH"]]
status=FAIL

[Detached Element.findAll: Invalid class: .]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): a[href*=".example."]]
status=FAIL

[In-document.findAll: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4]
status=FAIL

[In-document [Root Node].find: Attribute presence selector, matching multiple options with selected attributes (with refNode Element): #attr-presence-select3 option[selected]]
status=FAIL

[Fragment.findAll: Unknown pseudo-class: :example]
status=FAIL

[In-document [Context Element].findAll: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): :nth-last-child(4n-1)]
status=FAIL

[In-document.findAll: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2]
status=FAIL

[Fragment.find: Empty String: ]
status=FAIL

[Fragment.find: Invalid namespace: $|div]
status=FAIL

[In-document.find: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div]
status=FAIL

[In-document [Root Node].find: :nth-child selector, matching every second child element, starting from the fourth (with refNode Element): li:nth-child(2n+4)]
status=FAIL

[In-document [Context Element].find: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): li:nth-child(2n+4)]
status=FAIL

[In-document [Root Node].findAll: :nth-last-child selector, matching every third child element from the end (with refNode Element): li:nth-last-child(3n)]
status=FAIL

[In-document [Context Element].findAll: :nth-of-type selector, matching every second element of their type (with no refNodes): :nth-of-type(2n)]
status=FAIL

[In-document [Root Node].find: :first-child pseudo-class selector, doesn\'t match non-first-child elements (with refNode Element): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child]
status=FAIL

[In-document Element: static NodeList]
status=FAIL

[Fragment.find: Invalid namespace: ^|div]
status=FAIL

[In-document.findAll: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)]
status=FAIL

[In-document.findAll: ID selector, matching id value using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector, matching href attributes containing specified substring (with refNode Element): a[href*=".example."]]
status=FAIL

[In-document.find: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate]
status=FAIL

[In-document Element.find: Unknown pseudo-class: div:example]
status=FAIL

[In-document Element.find: Invalid namespace: $|div]
status=FAIL

[In-document [Root Node].find: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]]
status=FAIL

[In-document [Context Element].find: Attribute begins with selector, not matching class attribute not beginning with specified substring (with no refNodes): [class^=apple]]
status=FAIL

[Document.findAll: Invalid class: .]
status=FAIL

[Document.find: Invalid ID: #]
status=FAIL

[In-document [Context Element].findAll: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): span:nth-last-of-type(2n-1)]
status=FAIL

[In-document.find: ::first-line pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-line]
status=FAIL

[Document.findAll null]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=\' apple\']]
status=FAIL

[In-document.findAll: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong]
status=FAIL

[In-document [Context Element].findAll: :last-child pseudo-class selector, matching last child div element (with no refNodes): div:last-child]
status=FAIL

[Fragment.find: Invalid class: .bar.]
status=FAIL

[In-document [Root Node].findAll: :last-child pseudo-class selector, doesn\'t match non-last-child elements (with refNode Element): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child]
status=FAIL

[Fragment.find: Invalid [att=value] selector: [*=test]]
status=FAIL

[In-document [Context Element].findAll: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]]
status=FAIL

[In-document [Context Element].find: :last-of-type selector, matching the last td element in each table row (with no refNodes): tr :last-of-type]
status=FAIL

[In-document [Root Node].find: Attribute contains selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang*="-CH"]]
status=FAIL

[In-document.find: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked]
status=FAIL

[In-document [Root Node].find: :first-of-type selector, matching the first td element in each table row (with refNode Element): tr :first-of-type]
status=FAIL

[In-document [Context Element].findAll: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): [class*= apple]]
status=FAIL

[Detached Element.findAll: Invalid namespace: $|div]
status=FAIL

[Document supports find]
status=FAIL

[In-document [Root Node].find: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type="hidden"],#attr-value input[type=\'radio\']]
status=FAIL

[Document.find: Empty String: ]
status=FAIL

[In-document Element.find null]
status=FAIL

[In-document [Root Node].find: :first-of-type selector, matching the first of every type of element (with refNode Element): :first-of-type]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, not matching default option without selected attribute (with no refNodes): #attr-presence-select1 option[selected]]
status=FAIL

[In-document.find: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2]
status=FAIL

[In-document [Context Element].findAll: :nth-child selector, matching the third child element (with no refNodes): :nth-child(3)]
status=FAIL

[In-document.findAll: ID selector, matching element with id with escaped character (with no refNodes): #test\\.foo\\[5\\]bar]
status=FAIL

[In-document [Root Node].findAll: Attribute ends with selector, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple]]
status=FAIL

[Document.findAll: Invalid namespace: ^|div]
status=FAIL

[In-document [Root Node].find: Attribute value selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-value_foo="\\e9"]]
status=FAIL

[In-document.findAll: ID selector, matching id values using non-ASCII characters (with no refNodes): #\xe5\x8f\xb0\xe5\x8c\x97T\xc3\xa1ib\xc4\x9bi, #\xe5\x8f\xb0\xe5\x8c\x97]
status=FAIL

[Detached Element.find: Unknown pseudo-element: div::example]
status=FAIL

[In-document [Root Node].findAll: Attribute value selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-value="\\e9"]]
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector, not matching class attribute with partial value (with refNode Element): [data-attr-whitespace~="div"]]
status=FAIL

[Fragment.find: Unknown pseudo-element: ::example]
status=FAIL

[Detached Element.findAll tree order]
status=FAIL

[In-document Element.find: Invalid namespace: ^|div]
status=FAIL

[In-document [Root Node].findAll: Attribute contains selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang*="en-"]]
status=FAIL

[Detached Element.findAll: Invalid namespace: ^|div]
status=FAIL

[In-document [Root Node].find: :nth-child selector, matching every fourth child element, starting from the third (with refNode Element): :nth-child(4n-1)]
status=FAIL

[Fragment.find null]
status=FAIL

[In-document [Context Element].find: :nth-of-type selector, matching the third em element (with no refNodes): em:nth-of-type(3)]
status=FAIL

[In-document.find: Adjacent sibling combinator, not matching element with id that is not an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-p2, #adjacent-div2+#adjacent-div1]
status=FAIL

[In-document [Root Node].findAll: :nth-child selector, matching the third child element (with refNode Element): :nth-child(3)]
status=FAIL

[In-document [Context Element].find: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*=\'orange \']]
status=FAIL

[In-document Element.find: Invalid combinator: div ++ address, p]
status=FAIL

[In-document [Context Element].findAll: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|="fr"]]
status=FAIL

[In-document Element.find: Undeclared namespace: :not(ns|div)]
status=FAIL

[Detached Element.find: Unknown pseudo-class: div:example]
status=FAIL

[In-document.find: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1]
status=FAIL

[In-document.findAll: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong]
status=FAIL

[Detached Element.find: Invalid class: .bar.]
status=FAIL

[In-document [Context Element].findAll: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): li:nth-child(2n+4)]
status=FAIL

[In-document [Context Element].find: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple ]]
status=FAIL

[In-document [Context Element].findAll: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): span:nth-of-type(2n-1)]
status=FAIL

[In-document Element unprefixed matches method.]
status=FAIL

[Detached Element.find: Undeclared namespace: :not(ns|div)]
status=FAIL

[In-document Element.find: Unknown pseudo-element: div::example]
status=FAIL

[In-document [Context Element].find: :link and :visited pseudo-class selectors, matching link elements with href attributes (with no refNodes):  :link, #head :visited]
status=FAIL

[Document.findAll: Invalid character: []
status=FAIL

[In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching class attribute with value (with refNode Element): [class~="div1"]]
status=FAIL

[Document.findAll: Invalid character: }]
status=FAIL

[Document.findAll: Invalid character: {]
status=FAIL

[Fragment.find: Undeclared namespace: :not(ns|div)]
status=FAIL

[Detached Element.findAll: Unknown pseudo-element: div::example]
status=FAIL

[Detached Element.find: Invalid class: .5cm]
status=FAIL

[In-document Element.find: Empty String: ]
status=FAIL

[Document.findAll: Invalid character: <]
status=FAIL

[In-document [Root Node].find: :empty pseudo-class selector, matching all empty elements (with refNode Element): :empty]
status=FAIL

[Document.findAll: Invalid character: >]
status=FAIL

[Document.findAll: Invalid character: )]
status=FAIL

[Document.findAll: Invalid character: (]
status=FAIL

[In-document.find: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]]
status=FAIL

[In-document [Root Node].findAll: :last-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:last-child]
status=FAIL

[In-document [Root Node].find: Attribute ends with selector, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple]]
status=FAIL

[In-document [Root Node].find: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with refNode Element): :nth-last-child(4n-1)]
status=FAIL

[In-document [Context Element].find: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]]
status=FAIL

[In-document [Context Element].findAll: :pseudo-only-child pseudo-class selector, matching only-child em elements (with no refNodes): em:only-child]
status=FAIL

[Detached Element.find: Empty String: ]
status=FAIL

[In-document [Root Node].find: Attribute value selector, matching align attribute with value (with refNode Element): [align="center"]]
status=FAIL

